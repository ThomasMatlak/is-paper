
@article{alsop_exploring_1999,
	title = {Exploring the {Self} {Through} {Algorithmic} {Composition}},
	volume = {9},
	issn = {0961-1215},
	url = {http://www.jstor.org/stable/1513482},
	doi = {10.2307/1513482},
	abstract = {The author discusses his views on musical composition in the late twentieth century, focusing on the influence that communication and computer technology have had over his pursuit. He goes on to describe his use of computer-based algorithmic composition and how this particular approach enhances and refines his understanding of his own musical self-expression. He describes four computer algorithms, used in recent compositions and improvisations, that reflect his particualr musical interests.},
	journal = {Leonardo Music Journal},
	author = {Alsop, Roger},
	year = {1999},
	pages = {89--94},
	annote = {In this paper Roger Alsop, a Lecturer in Sound, at the Victorian College of the Arts and Music, describes two processes he uses for algorithmic composition. One approach uses poems as the seed for the melody. The other approach is two methods for improvisation. In the first method, each of forty-eight notes trigger different sub-algorithms to modify the music in some way. In the second method, recent input is stored and played with a variety of adjustments, including retrogrades, inversions, transpositions, and played on any number of MIDI instruments. This paper is relevant to this project by providing insight to what, other than a melody, could be a possible input for a program, and how to handle that type of input.},
	file = {JSTOR Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\GQH38XRI\\Alsop - 1999 - Exploring the Self Through Algorithmic Composition.pdf:application/pdf}
}

@article{leach_nature_1995,
	title = {Nature, {Music}, and {Algorithmic} {Composition}},
	volume = {19},
	issn = {0148-9267},
	url = {http://www.jstor.org/stable/3680598},
	doi = {10.2307/3680598},
	number = {2},
	journal = {Computer Music Journal},
	author = {Leach, Jeremy and Fitch, John},
	year = {1995},
	pages = {23--33},
	annote = {The authors, from the University of Bath, discuss what makes for good musical structures, such as melody and rhythm. They also discuss the use of fractals and chaos as methods for algorithmic composition. This article provides information about the structures of music, and provides a starting point to looking at the mathematics behind these ideas.},
	file = {JSTOR Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\W9MBXIK6\\Leach and Fitch - 1995 - Nature, Music, and Algorithmic Composition.pdf:application/pdf}
}

@article{todd_connectionist_1989,
	title = {A {Connectionist} {Approach} to {Algorithmic} {Composition}},
	volume = {13},
	issn = {0148-9267},
	url = {http://www.jstor.org/stable/3679551},
	doi = {10.2307/3679551},
	number = {4},
	journal = {Computer Music Journal},
	author = {Todd, Peter M.},
	year = {1989},
	pages = {27--43},
	annote = {This article is by Peter Todd, who at the time of writing was at Stanford University working on his Ph.D. in Psychology. The article discusses the use of artificial neural networks to generate music. The author starts by training a network to produce the next measure, given a measure as input. Next, he uses a different network to predict a series of individual notes, keeping a memory of past notes. The author writes at length about how the melodic input is represented. This paper provides a detailed description of how one might train and use neural networks to generate melody.},
	file = {JSTOR Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\294FH4D2\\Todd - 1989 - A Connectionist Approach to Algorithmic Compositio.pdf:application/pdf}
}

@inproceedings{papadopoulos_ai_1999,
	title = {{AI} methods for algorithmic composition: {A} survey, a critical view and future prospects},
	shorttitle = {{AI} methods for algorithmic composition},
	url = {http://www.academia.edu/download/3433841/AI_Methods_for_Algorithmic_Composition_A_Survey_a_Critical_View_and_Future_Prospects.pdf},
	urldate = {2017-08-29},
	booktitle = {{AISB} {Symposium} on {Musical} {Creativity}},
	publisher = {Edinburgh, UK},
	author = {Papadopoulos, George and Wiggins, Geraint},
	year = {1999},
	pages = {110--117},
	annote = {This article is by George Papadopoulos and Geraint Wiggins, from the University of Edinburgh. In the paper, the authors give a survey overview of methods for algorithmic composition. They discuss the advantages and disadvantages of each method, concluding that combining several methods will result in the best music. The article will help in choosing which methods to use in this project.},
	file = {AI_Methods_for_Algorithmic_Composition_A_Survey_a_Critical_View_and_Future_Prospects.pdf:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\TT6HA98H\\AI_Methods_for_Algorithmic_Composition_A_Survey_a_Critical_View_and_Future_Prospects.pdf:application/pdf}
}

@book{nierhaus_algorithmic_2009,
	title = {Algorithmic {Composition}: {Paradigms} of {Automated} {Music} {Generation}},
	isbn = {978-3-211-75540-2},
	shorttitle = {Algorithmic {Composition}},
	abstract = {Algorithmic composition {\textendash} composing by means of formalizable methods {\textendash} has a century old tradition not only in occidental music history. This is the first book to provide a detailed overview of prominent procedures of algorithmic composition in a pragmatic way rather than by treating formalizable aspects in single works. In addition to an historic overview, each chapter presents a specific class of algorithm in a compositional context by providing a general introduction to its development and theoretical basis and describes different musical applications. Each chapter outlines the strengths, weaknesses and possible aesthetical implications resulting from the application of the treated approaches. Topics covered are: markov models, generative grammars, transition networks, chaos and self-similarity, genetic algorithms, cellular automata, neural networks and artificial intelligence are covered. The comprehensive bibliography makes this work ideal for the musician and the researcher alike.},
	language = {en},
	publisher = {Springer Science \& Business Media},
	author = {Nierhaus, Gerhard},
	month = aug,
	year = {2009},
	keywords = {Computers / Computer Science, Computers / Programming / Algorithms, History / General, Mathematics / Applied, Mathematics / Counting \& Numeration, Mathematics / General, Mathematics / Numerical Analysis, Music / General},
	annote = {The author of this book is Garhard Nierhaus, a composer who teaches Algorithmic Music and Computer Music at the Institute of Electronic Music and Acoustics at the University of Music and Performing Arts Graz, Austria. The book contains a survey overview of algorithms and their applications in imitative composition. This book will help in deciding which algorithms to use in the project.}
}

@article{alpern_techniques_1995,
	title = {Techniques for {Algorithmic} {Composition} of {Music}},
	url = {https://pdfs.semanticscholar.org/d701/dd6cdc82ed544422c553dab59426f759d558.pdf},
	urldate = {2017-08-29},
	journal = {Hampshire College},
	author = {Alpern, Adam},
	year = {1995},
	annote = {The author, Adam Alpern, is a former member of the Institute for Computational Intelligence at Hampshire College. This group works to support artificial intelligence research, among other cross-field areas of research combining computer science with physics, biology, cognitive science, and the arts. The article covers several methods for melodic generation. The first method, contour analysis, looks at the shape of a melody and extends it by conforming to the same general shape of the existing melody. The second method, nonlinear dynamical systems and chaos, focuses on randomness to generate music. The third method, genetic programming, uses a fitness function to choose the best melodies from each generation and combines and mutates them to create the next generation. This article will be a good starting point for looking into different algorithms to generate music.},
	file = {dd6cdc82ed544422c553dab59426f759d558.pdf:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\6R5BJIHD\\dd6cdc82ed544422c553dab59426f759d558.pdf:application/pdf}
}

@article{colombo_algorithmic_2016,
	title = {Algorithmic {Composition} of {Melodies} with {Deep} {Recurrent} {Neural} {Networks}},
	url = {http://arxiv.org/abs/1606.07251},
	doi = {10.13140/RG.2.1.2436.5683},
	abstract = {A big challenge in algorithmic composition is to devise a model that is both easily trainable and able to reproduce the long-range temporal dependencies typical of music. Here we investigate how artificial neural networks can be trained on a large corpus of melodies and turned into automated music composers able to generate new melodies coherent with the style they have been trained on. We employ gated recurrent unit networks that have been shown to be particularly efficient in learning complex sequential activations with arbitrary long time lags. Our model processes rhythm and melody in parallel while modeling the relation between these two features. Using such an approach, we were able to generate interesting complete melodies or suggest possible continuations of a melody fragment that is coherent with the characteristics of the fragment itself.},
	journal = {arXiv:1606.07251 [cs, stat]},
	author = {Colombo, Florian and Muscinelli, Samuel P. and Seeholzer, Alexander and Brea, Johanni and Gerstner, Wulfram},
	month = jun,
	year = {2016},
	note = {arXiv: 1606.07251},
	keywords = {Computer Science - Learning, Statistics - Machine Learning},
	annote = {The authors are researchers from the Swiss Federal Institute of Technology. The goal of this article is to create a model for algorithmic composition that is easy to train and can generate rhythm at the same time as it generates the notes. They train recurrent neural networks to create new melodies. Using this model, which has no previous notion of musical rules, the authors can both continue existing melodies and automatically create new music. Using this model, the authors can avoid a limitation of Markov chains in seeing the bigger picture while composing. The article provides a starting point for the potential use of neural networks in this project.},
	file = {arXiv\:1606.07251 PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\54BCHFVT\\Colombo et al. - 2016 - Algorithmic Composition of Melodies with Deep Recu.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\EPXDSB3Q\\1606.html:text/html}
}

@article{ariza_two_2011,
	title = {Two {Pioneering} {Projects} from the {Early} {History} of {Computer}-{Aided} {Algorithmic} {Composition}},
	volume = {35},
	issn = {0148-9267},
	url = {http://www.jstor.org/stable/41241764},
	doi = {10.2307/41241764},
	number = {3},
	journal = {Computer Music Journal},
	author = {Ariza, Christopher},
	year = {2011},
	pages = {40--56},
	annote = {This article by Christopher Ariza, a Visiting Assistant Professor of Music at MIT, discusses several early projects in algorithmic composition. The first project implements a dice game by Mozart, in which short sections of music are combined based on rolls of the dice. The other project uses transitional probabilities to generate chord progressions. Random notes from the chords are then selected for the first and third beats of each measure, with notes in between chosen from a set of transitional probabilities. Yet another project focuses on atonal composition. The article provides some historical context from the early years of algorithmic composition.},
	file = {JSTOR Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\K6B6NWZK\\Ariza - 2011 - Two Pioneering Projects from the Early History of .pdf:application/pdf}
}

@inproceedings{prudente_towards_2017,
	title = {Towards {Automated} {Counter}-{Melody} {Generation} for {Monophonic} {Melodies}},
	isbn = {978-1-4503-4828-7},
	url = {http://dl.acm.org/citation.cfm?doid=3036290.3036295},
	doi = {10.1145/3036290.3036295},
	language = {en},
	urldate = {2017-09-06},
	publisher = {ACM Press},
	author = {Prudente, Luke and Coronel, Andrei},
	year = {2017},
	pages = {197--202},
	annote = {The authors of this article are Luke Prudente and Andrei Coronel, from Ateneo de Manila University. In the article they discuss automated generation of counter-melodies to go along with existing melodies. That is, a second melody played simultaneously with the main melody such that they sound appropriate together. The authors break the given melodies into chord progressions, and use those progressions to generate a counter-melody. The article provides insight into a process of taking melody as input to generate other musical parts.},
	file = {p197-Prudente.pdf:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\RNDPGTJR\\p197-Prudente.pdf:application/pdf}
}

@article{mcvicar_autoguitartab:_2015,
	title = {{AutoGuitarTab}: {Computer}-aided {Composition} of {Rhythm} and {Lead} {Guitar} {Parts} in the {Tablature} {Space}},
	volume = {23},
	issn = {2329-9290},
	shorttitle = {{AutoGuitarTab}},
	url = {http://0-dx.doi.org.dewey2.library.denison.edu/10.1109/TASLP.2015.2419976},
	doi = {10.1109/TASLP.2015.2419976},
	abstract = {We present AutoGuitarTab, a system for generating realistic guitar tablature given an input symbolic chord and key sequence. Our system consists of two modules: AutoRhythm-Guitar and AutoLeadGuitar. The first of these generates rhythm guitar tablatures which outline the input chord sequence in a particular style (using Markov chains to ensure playability) and performs a structural analysis to produce a structurally consistent composition. AutoLeadGuitar generates lead guitar parts in distinct musical phrases, guiding the pitch classes towards chord tones and steering the evolution of the rhythmic and melodic intensity according to user preference. Experimentally, we uncover musician-specific trends in guitar playing style, and demonstrate our system's ability to produce playable, realistic and style-specific tablature using a combination of algorithmic, user-surveyed and expert evaluation techniques.},
	number = {7},
	journal = {IEEE/ACM Trans. Audio, Speech and Lang. Proc.},
	author = {McVicar, Matt and Fukayama, Satoru and Goto, Masataka},
	month = jul,
	year = {2015},
	keywords = {algorithmic composition, computer-aided composition (CAC), symbolic music processing},
	pages = {1105--1117},
	annote = {This article is by Matt McVicar, Satoru Fukayama, and Masataka Goto, who all have a current or recent association with the National Institute of Advanced Industrial Science and Technology in Tsukuba, Japan. The article discusses automated generation of realistic lead guitar tablature in two parts: a rhythm generator and a melody generator. A rhythmic structure is first created, and the melody is fit into the rhythmic framework. The article will provide information about generating coherent rhythms.},
	file = {ACM Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\K44HKG3G\\McVicar et al. - 2015 - AutoGuitarTab Computer-aided Composition of Rhyth.pdf:application/pdf}
}

@inproceedings{de_freitas_originality_2011,
	address = {New York, NY, USA},
	series = {{GECCO} '11},
	title = {Originality and {Diversity} in the {Artificial} {Evolution} of {Melodies}},
	isbn = {978-1-4503-0557-0},
	url = {http://0-doi.acm.org.dewey2.library.denison.edu/10.1145/2001576.2001634},
	doi = {10.1145/2001576.2001634},
	abstract = {One of the greatest problems when using genetic algorithms to evolve melodies is creating an aesthetically conscious measure of fitness. In this paper, we describe a new approach with a minimum measure of fitness in which a set of good individuals is returned at the end of the process. Details about the implementation of a population of measures and some genetic operators are described in this work before an implicit way to evaluate fitness is given. We define a Takeover Matrix to measure the relationship between different generations and its compromise between originality and diversity. By means of this Takeover Matrix, the evolutionary process itself can be used as a criterion instead of using only ordinary individual measures of fitness. The results show the implications of using the proposed approach and demonstrate that the proposed algorithm is able to generate good sets of melodies. The algorithm can be used not only for developing new ideas but also to extend earlier created melodies with influence from the initial population.},
	booktitle = {Proceedings of the 13th {Annual} {Conference} on {Genetic} and {Evolutionary} {Computation}},
	publisher = {ACM},
	author = {de Freitas, Alan R.R. and Guimar{\~a}es, Frederico Gadelha},
	year = {2011},
	keywords = {algorithmic composition, COMPUTER music, evolutionary music, genetic algorithms},
	pages = {419--426},
	annote = {The authors of this article are Alan de Freitas, from the Computer Science department at the Federal University of Ouro Preto, and Frederico Guimar{\~a}es, from the Electrical Engineering department at the Federal University of Minas Gerais. The authors discuss the use of genetic algorithms to generate melody. In particular, they discuss a fitness function to determine which melodies from a generation should become the seeds of the next generation. The article will provide a starting point for the potential use of genetic algorithms in this project.},
	file = {ACM Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\553XX3AJ\\de Freitas and Guimar{\~a}es - 2011 - Originality and Diversity in the Artificial Evolut.pdf:application/pdf}
}

@inproceedings{foxwell_composing_2012,
	address = {New York, NY, USA},
	series = {{AM} '12},
	title = {Composing with {Algorithms}: {Two} {Novel} {Generative} {Composition} {Tools}},
	isbn = {978-1-4503-1569-2},
	shorttitle = {Composing with {Algorithms}},
	url = {http://0-doi.acm.org.dewey2.library.denison.edu/10.1145/2371456.2371468},
	doi = {10.1145/2371456.2371468},
	abstract = {Most composers may at some point struggle with the creative process. Breaking free from writer's block and the composer's own limitations can be achieved through the use of algorithmic approaches to music creation. This project is aimed at development of two algorithmic compositional tools, which can be used within the Digital Audio Workstation Ableton with Max for Live software. The first employs 2nd order Markov chains to aid composers in creation of unique midi melodies. The second approach uses Cellular Automata to select loop points in digital audio files, shuffling audio segments in time to create new patterns. Results suggest these systems have the potential to inspire composers, allow them to augment their compositions, and in turn help them overcome creative problems.},
	booktitle = {Proceedings of the 7th {Audio} {Mostly} {Conference}: {A} {Conference} on {Interaction} with {Sound}},
	publisher = {ACM},
	author = {Foxwell, Iain and Knox, Don},
	year = {2012},
	keywords = {Algorithms, cellular automata, composition, Markov},
	pages = {76--81},
	annote = {This paper by Iain Foxwell and Dan Knox of Glasgow Caledonian University covers the use of two algorithms to compose music: second-order Markov chains and audio automata. Using second-order Markov chains, the authors use the previous three notes to predict the next note, allowing the algorithm to continue a melody. The second method, audio automata, breaks the audio into chunks and reorders those chucks using a cellular automata simulation. The authors conclude that the Markov chains produced better music overall. For this project the most relevant information in this paper is the setup of the second-order Markov chains.},
	file = {ACM Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\KHN9KEX9\\Foxwell and Knox - 2012 - Composing with Algorithms Two Novel Generative Co.pdf:application/pdf}
}

@article{anders_constraint_2011,
	title = {Constraint {Programming} {Systems} for {Modeling} {Music} {Theories} and {Composition}},
	volume = {43},
	issn = {0360-0300},
	url = {http://0-doi.acm.org.dewey2.library.denison.edu/10.1145/1978802.1978809},
	doi = {10.1145/1978802.1978809},
	abstract = {Constraint programming is well suited for the computational modeling of music theories and composition: its declarative and modular approach shares similarities with the way music theory is traditionally expressed, namely by a set of rules which describe the intended result. Various music theory disciplines have been modeled, including counterpoint, harmony, rhythm, form, and instrumentation. Because modeling music theories {\textquotedblleft}from scratch{\textquotedblright} is a complex task, generic music constraint programming systems have been proposed that predefine the required building blocks for modeling a range of music theories. After introducing the field and its problems in general, this survey compares these generic systems according to a number of criteria such as the range of music theories these systems support.},
	number = {4},
	journal = {ACM Comput. Surv.},
	author = {Anders, Torsten and Miranda, Eduardo R.},
	month = oct,
	year = {2011},
	keywords = {algorithmic composition, computer-aided composition, constraint programming, music representation, music theory},
	pages = {30:1--30:38},
	annote = {The authors are Torsten Anders, a lecturer and course leader at the University of Bedfordshire and Eduardo Miranda, a researcher in the field of machine intelligence in music. The article discusses the use of constraint programming (CP) as applied to music: what CP is, how aspects of music can be modeled using CP, and how to determine solutions to those models. The article provides a detailed description of one method of generating music.},
	file = {ACM Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\J8K7KIXW\\Anders and Miranda - 2011 - Constraint Programming Systems for Modeling Music .pdf:application/pdf}
}

@inproceedings{wells_novel_2011,
	address = {New York, NY, USA},
	series = {{ACM}-{SE} '11},
	title = {A {Novel} {Approach} for {Automated} {Music} {Composition} {Using} {Memetic} {Algorithms}},
	isbn = {978-1-4503-0686-7},
	url = {http://0-doi.acm.org.dewey2.library.denison.edu/10.1145/2016039.2016083},
	doi = {10.1145/2016039.2016083},
	abstract = {Music has been an integral part of society for hundreds of years. Since the advent and rise of computers and computer technologies, musicians have utilized these advances in their craft, whether it is in electronic music or the notation of musical scores. The field of memetic computing is a new and developing one. A few researchers are using memetic algorithms to solve real world problems. This research offers a novel approach to produce quality musical compositions using a memetic algorithm. Unlike other computer music composition proposals in the literature, our proposal does not need any intervention from the user. Our preliminary results are very promising and conforms with MIDI protocol standards; the industry standard for electronic musical instruments.},
	booktitle = {Proceedings of the 49th {Annual} {Southeast} {Regional} {Conference}},
	publisher = {ACM},
	author = {Wells, Derek and ElAarag, Hala},
	year = {2011},
	keywords = {memetic algorithms, memetic computing, music composition},
	pages = {155--159},
	annote = {In this paper, Derek Wells and Hala ElAarag from Steston University discuss the use of memetic algorithms to generate music. A memetic algorithm is a combination of genetic algorithms and a localized improvement feature. The authors use a loose stopping condition, so the melodies they generate are not very musical. With a stricter stopping condition however, more musical melodies could be produced. In their conclusion, the authors state that in future work, they hope that chord progressions and second melodies can be generated using this technique.},
	file = {ACM Full Text PDF:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\I97CNGIA\\Wells and ElAarag - 2011 - A Novel Approach for Automated Music Composition U.pdf:application/pdf}
}

@book{cope_computers_1991,
	address = {Madison, Wis},
	series = {The {Computer} {Music} and {Digital} {Audio} {Series}},
	title = {Computers and {Musical} {Style}},
	isbn = {978-0-89579-256-3},
	number = {v. 6},
	publisher = {A-R Editions},
	author = {Cope, David},
	year = {1991},
	keywords = {Computer composition, Computer programs, LISP (Computer program language), Style, Musical}
}

@book{cope_experiments_1996,
	address = {Madison, Wis},
	series = {The {Computer} {Music} and {Digital} {Audio} {Series}},
	title = {Experiments in {Musical} {Intelligence}},
	isbn = {978-0-89579-314-0},
	number = {v. 12},
	publisher = {A-R Editions},
	author = {Cope, David},
	year = {1996},
	keywords = {Composition (Music), Computer programs, Cope, David, EMI}
}

@book{cope_algorithmic_2000,
	address = {Madison, Wis},
	series = {The {Computer} {Music} and {Digital} {Audio} {Series}},
	title = {The {Algorithmic} {Composer}},
	isbn = {978-0-89579-454-3},
	number = {v. 16},
	publisher = {A-R Editions},
	author = {Cope, David},
	year = {2000},
	keywords = {Alice (Computer file), Composition (Music), Computer composition, Computer programs},
	annote = {In this trilogy of books, David Cope, an artificial intelligence and music researcher, formerly Professor of Music at the University of California, Santa Cruz, writes about his processes for algorithmic composition. The first book, ``Computers and Musical Style,'' covers computational analysis of musical style In particular, Cope includes an augmented transition network to model music. The second book, ``Experiments in Musical Intelligence,'' builds on the analytical concepts introduced in the first book and introduces code to generate new music imitating the styles of other composers. The third book, ``The Algorithmic Composer,'' covers computer-assisted composition in-depth. This trilogy gives information about how one composer proceeded when creating his own programs to compose music.}
}

@book{cope_virtual_2001,
	address = {Cambridge, Mass},
	title = {Virtual {Music}: {Computer} {Synthesis} of {Musical} {Style}},
	isbn = {978-0-262-03283-4},
	shorttitle = {Virtual music},
	publisher = {MIT Press},
	author = {Cope, David},
	year = {2001},
	keywords = {Composition (Music), Computer programs, Cope, David, EMI},
	annote = {In this follow-up to his previous trilogy, Cope writes about issues surrounding his Experiments in Musical Intelligence program. The topics he discusses include artificial intelligence, aesthetics, and music cognition. The first part of the book covers a historical background for the program, the second part goes through the process of composing a work using the program, the third part contains analysis and perspectives of the composition, and the final part contains Cope's responses to those perspectives.}
}

@article{horner_genetic_1991,
	title = {Genetic {Algorithms} and {Computer}-{Assisted} {Music} {Composition}},
	volume = {51},
	url = {https://www.researchgate.net/profile/Andrew_Horner/publication/252520139_Genetic_Algorithms_and_Computer-Assisted_Music_Composition/links/571875be08aed43f63221228.pdf},
	abstract = {Genetic algorithms (GAs) have been used with increasing frequency and effectiveness in a variety of problems. This paper investigates the application of genetic algorithms to music composition. A technique of thematic bridging is presented that allows for the specification of thematic material and delegates its development to the genetic algorithm. Some preliminary results are then discussed with an eye toward future work in GA-assisted composition.},
	urldate = {2017-08-31},
	journal = {Urbana},
	author = {Horner, Andrew and Goldberg, David},
	year = {1991},
	pages = {437--441},
	annote = {This article is by Andrew Horner, who was working on his Ph.D. at the University of Illinois at Urbana-Champaign at the time of writing, and David Goldberg, a professor in the Industrial and Enterprise Systems Engineering department at the University of Illinois at Urbana-Champaign. Goldberg's research focus is genetic algorithms. This paper investigates the use of genetic algorithms in music composition. The paper describes a fitness function for music and the various mutations that might occur between generations. It provides information about how to design genetic algorithms to create music.},
	file = {571875be08aed43f63221228.pdf:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\SXTAHS7T\\571875be08aed43f63221228.pdf:application/pdf}
}

@article{fernandez_ai_2013,
	title = {{AI} {Methods} in {Algorithmic} {Composition}: {A} {Comprehensive} {Survey}},
	volume = {48},
	url = {http://www.jair.org/media/3908/live-3908-7454-jair.pdf},
	abstract = {Algorithmic composition is the partial or total automation of the process of music composition by using computers. Since the 1950s, different computational techniques related to Artificial Intelligence have been used for algorithmic composition, including grammatical representations, probabilistic methods, neural networks, symbolic rule-based systems, constraint programming and evolutionary algorithms. This survey aims to be a comprehensive account of research on algorithmic composition, presenting a thorough view of the field for
researchers in Artificial Intelligence},
	urldate = {2017-09-05},
	journal = {Journal of Artificial Intelligence Research},
	author = {Fern{\'a}ndez, David and Vico, Francisco},
	year = {2013},
	pages = {513--582},
	annote = {The authors, from the University of M{\'a}gala, cover many techniques for algorithmic composition, including, but not limited to: neural networks, evolutionary algorithms, and probabilistic methods. This article is intended as an introduction to methods of algorithmic composition, and as such does not go into much detail about any of the methods. This article will serve as a starting point to investigate some of the described methods more thoroughly.},
	file = {live-3908-7454-jair.pdf:C\:\\Users\\thoma\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\2tuh6sj1.default\\zotero\\storage\\H3CAB232\\live-3908-7454-jair.pdf:application/pdf}
}